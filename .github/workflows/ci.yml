name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '24.0.x'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Backend build
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore backend dependencies
        run: dotnet restore

      - name: Build backend
        run: dotnet build --no-restore --configuration Release

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: Backend.Api/bin/Release/net*/

      - name: Upload integration test artifact
        uses: actions/upload-artifact@v4
        with:
          name: integration-test
          path: Backend.Test.IntegrationTests/bin/Release/net*/

      - name: Upload unit test artifact
        uses: actions/upload-artifact@v4
        with:
          name: unit-test
          path: Backend.Test.UnitTests/bin/Release/net*/

      # Frontend build
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install PNPM
        run: npm install -g pnpm

      - name: Install frontend dependencies
        working-directory: Frontend.Web
        run: pnpm install

      - name: Build frontend
        working-directory: Frontend.Web
        run: pnpm build

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: |
            Frontend.Web/.next
            Frontend.Web/package.json
            Frontend.Web/pnpm-lock.yaml
            Frontend.Web/next.config.mjs
            Frontend.Web/public

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      # Backend tests
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Download integration test artifact
        uses: actions/download-artifact@v4
        with:
          name: integration-test
          path: Backend.Test.IntegrationTests/bin/Release/net*/

      - name: Download unit test artifact
        uses: actions/download-artifact@v4
        with:
          name: unit-test
          path: Backend.Test.UnitTests/bin/Release/net*/

      - name: Update Integration.Tests appsettings
        uses: microsoft/variable-substitution@v1
        with:
          files: Backend.Test.IntegrationTests/appsettings.json
        env:
          AzureOpenAI.Endpoint: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
          AzureOpenAI.ApiKey: ${{ secrets.AZURE_OPENAI_APIKEY }}
          AzureOpenAI.DeploymentName: ${{ secrets.AZURE_OPENAI_DEPLOYMENTNAME }}

      - name: Run integration tests
        working-directory: Backend.Test.IntegrationTests
        run: dotnet test Backend.Test.IntegrationTests.dll --no-build --verbosity normal --configuration Release

      - name: Run unit tests
        working-directory: Backend.Test.UnitTests
        run: dotnet test Backend.Test.UnitTests.dll --no-build --verbosity normal --configuration Release
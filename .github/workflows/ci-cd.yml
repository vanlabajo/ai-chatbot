name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  DOTNET_VERSION: 8.0.x
  NODE_VERSION: 24.0.x
  AZURE_WEBAPP_NAME_API: ai-chatbot-api-t7xmwp
  AZURE_WEBAPP_NAME_UI: ai-chatbot-ui-t7xmwp

jobs:
  build-and-deploy-api:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Update appsettings
        uses: microsoft/variable-substitution@v1
        with:
          files: 'Backend.Api/appsettings.json, Backend.Test.IntegrationTests/appsettings.json'
        env:
          AzureOpenAI.Endpoint: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
          AzureOpenAI.ApiKey: ${{ secrets.AZURE_OPENAI_APIKEY }}
          AzureOpenAI.DeploymentName: ${{ secrets.AZURE_OPENAI_DEPLOYMENTNAME }}
          AzureAd.TenantId: ${{ secrets.AZURE_AD_TENANT_ID }}
          AzureAd.ClientId: ${{ secrets.AZURE_AD_CLIENT_ID }}
          AzureAd.ClientSecret: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
          AzureAd.Audiences__0: ${{ secrets.AZURE_AD_AUDIENCES_0 }}
          AzureAd.Audiences__1: ${{ secrets.AZURE_AD_AUDIENCES_1 }}
          SwaggerUI.ClientId: ${{ secrets.AZURE_AD_CLIENT_ID }}
          SwaggerUI.Scope: ${{ secrets.SWAGGER_UI_SCOPE}}

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Test
        run: dotnet test --no-build --verbosity normal --configuration Release

      - name: Publish
        working-directory: Backend.Api
        run: dotnet publish -c Release -o ai-chatbot-api

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: Backend.Api/ai-chatbot-api

      - name: Deploy
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_API }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_API }}
          package: Backend.Api/ai-chatbot-api
  
  build-and-deploy-ui:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: Frontend.Web/pnpm-lock.yaml
        
      - name: Install dependencies
        working-directory: Frontend.Web
        run: pnpm install

      - name: Create .env.production
        working-directory: Frontend.Web
        run: |
          echo "NEXT_PUBLIC_CLIENT_ID=${{ secrets.AZURE_AD_CLIENT_ID }}" >> .env.production
          echo "NEXT_PUBLIC_TENANT_ID=${{ secrets.AZURE_AD_TENANT_ID }}" >> .env.production
          echo "NEXT_PUBLIC_REDIRECT_URI=${{ secrets.NEXT_PUBLIC_REDIRECT_URI }}" >> .env.production
          echo "NEXT_PUBLIC_SCOPE=${{ secrets.SWAGGER_UI_SCOPE }}" >> .env.production
          echo "NEXT_PUBLIC_API_ENDPOINT=${{ secrets.NEXT_PUBLIC_API_ENDPOINT }}" >> .env.production

      - name: Build
        working-directory: Frontend.Web
        run: pnpm build

      - name: Package
        working-directory: Frontend.Web
        run: pnpm deploy --filter ai-chatbot --prod --legacy ai-chatbot-ui

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: Frontend.Web/ai-chatbot-ui

      - name: Deploy
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_UI }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_UI }}
          package: Frontend.Web/ai-chatbot-ui
          clean: true
          restart: true
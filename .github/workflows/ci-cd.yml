name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  DOTNET_VERSION: 8.0.x
  NODE_VERSION: 24.0.x
  AZURE_WEBAPP_NAME_API: ai-chatbot-api-t7xmwp
  AZURE_WEBAPP_NAME_UI: ai-chatbot-ui-t7xmwp

jobs:
  build-and-deploy-api:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Update appsettings
        uses: microsoft/variable-substitution@v1
        with:
          files: 'Backend.Api/appsettings.json, Backend.Test.IntegrationTests/appsettings.json'
        env:
          AzureOpenAI.Endpoint: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
          AzureOpenAI.ApiKey: ${{ secrets.AZURE_OPENAI_APIKEY }}
          AzureOpenAI.DeploymentName: ${{ secrets.AZURE_OPENAI_DEPLOYMENTNAME }}
          AzureAd.TenantId: ${{ secrets.AZURE_AD_TENANT_ID }}
          AzureAd.ClientId: ${{ secrets.AZURE_AD_CLIENT_ID }}
          AzureAd.ClientSecret: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
          AzureAd.Audiences__0: ${{ secrets.AZURE_AD_AUDIENCES_0 }}
          AzureAd.Audiences__1: ${{ secrets.AZURE_AD_AUDIENCES_1 }}
          SwaggerUI.ClientId: ${{ secrets.AZURE_AD_CLIENT_ID }}
          SwaggerUI.Scope: ${{ secrets.SWAGGER_UI_SCOPE}}

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Test
        run: dotnet test --no-build --verbosity normal --configuration Release

      - name: Publish
        working-directory: Backend.Api
        run: dotnet publish -c Release -o ai-chatbot-api

      - name: Deploy
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_API }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_API }}
          package: Backend.Api/ai-chatbot-api
  
  build-and-deploy-ui:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3      

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure Container Registry Login
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        working-directory: Frontend.Web
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_CLIENT_ID=${{ secrets.AZURE_AD_CLIENT_ID }} \
            --build-arg NEXT_PUBLIC_TENANT_ID=${{ secrets.AZURE_AD_TENANT_ID }} \
            --build-arg NEXT_PUBLIC_REDIRECT_URI=${{ secrets.NEXT_PUBLIC_REDIRECT_URI }} \
            --build-arg NEXT_PUBLIC_SCOPE=${{ secrets.SWAGGER_UI_SCOPE }} \
            --build-arg NEXT_PUBLIC_API_ENDPOINT=${{ secrets.NEXT_PUBLIC_API_ENDPOINT }} \
            -t ${{ secrets.ACR_LOGIN_SERVER }}/ai-chatbot-ui:${{ github.sha }} \
            -t ${{ secrets.ACR_LOGIN_SERVER }}/ai-chatbot-ui:latest .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/ai-chatbot-ui:${{ github.sha }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/ai-chatbot-ui:latest

      - name: Update App Service to use new image
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_UI }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_UI }}
          images: ${{ secrets.ACR_LOGIN_SERVER }}/ai-chatbot-ui:${{ github.sha }}